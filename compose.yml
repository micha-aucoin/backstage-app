services:
  backstage-app:
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    container_name: backstage-app
    volumes:
      - ./packages/backend/src:/app/packages/backend/src
      - ./packages/app/src:/app/packages/app/src
      - ./app-config.yaml:/app/app-config.yaml
      - ./packages/backend/package.json:/app/packages/backend/package.json
      - ./packages/app/package.json:/app/packages/app/package.json
    env_file:
      - .env
    ports:
      - "7007:7007"
    networks:
      - backstage-net
    depends_on:
      backstage-pg:
        condition: service_healthy

  backstage-pg:
    image: bitnami/postgresql:13
    container_name: backstage-pg
    environment:
      - POSTGRESQL_USERNAME=backstage
      - POSTGRESQL_PASSWORD=backstagePass123
      - POSTGRESQL_DATABASE=backstage_db
    ports:
      - "5432:5432"
    volumes:
      - backstage-pg-data:/bitnami/postgresql
    networks:
      - backstage-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U backstage -d backstage_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:4.23
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    ports:
      - 15432:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - backstage-pg
    networks:
      - backstage-net

volumes:
  backstage-pg-data:
    name: backstage-pg-data
  pgadmin-data:
    name: pgadmin-data

networks:
  backstage-net:
    name: backstage-net